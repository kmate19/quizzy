<Application x:Class="localadmin.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
             xmlns:local="clr-namespace:localadmin"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        
        <!--left menu buttons-->
        <Style TargetType="Button" x:Key="MenuButton">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Background" Value="#3B82F6" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Padding" Value="10" />
            <Setter Property="Margin" Value="10" />
            <Setter Property="Width" Value="150" />
            <Setter Property="Height" Value="45" />
            <Setter Property="BorderThickness" Value="0" />
            
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                        CornerRadius="10"
                            BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" 
                                      VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect BlurRadius="10" ShadowDepth="2" Color="#000000" Opacity="0.3" />
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#2563EB" />
                    <Setter Property="Cursor" Value="Hand" />
                </Trigger>
                
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#1D4ED8" />
                </Trigger>
            </Style.Triggers>
        </Style>


        <!--left menu icons-->
        <Style TargetType="fa:IconImage" x:Key="IconStyle">
            <Setter Property="Width" Value="20" />
            <Setter Property="Height" Value="20" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Margin" Value="0,0,5,0" />
            <Setter Property="HorizontalAlignment" Value="Left" />
        </Style>


        <!--List Viewer Buttons-->
        <Style x:Key="GridButtons" TargetType="Button">
            <Setter Property="Background" Value="#3B82F6" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Padding" Value="5,2" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Height" Value="35" />
            <Setter Property="Width" Value="80"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            CornerRadius="10">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#2563EB"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#1D4ED8"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!--User Acticvity Coloring-->
        <Style x:Key="ActivityStatusStyle" TargetType="TextBlock">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ActivityStatus}" Value="Active">
                    <Setter Property="Foreground" Value="Green" />
                </DataTrigger>
                <DataTrigger Binding="{Binding ActivityStatus}" Value="Inactive">
                    <Setter Property="Foreground" Value="Gray" />
                </DataTrigger>
                <DataTrigger Binding="{Binding ActivityStatus}" Value="Away">
                    <Setter Property="Foreground" Value="Orange" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <!--User Status Coloring-->
        <Style x:Key="AuthStatusStyle" TargetType="TextBlock">
            <Style.Triggers>
                <DataTrigger Binding="{Binding AuthStatus}" Value="Pending">
                    <Setter Property="Foreground" Value="DimGray" />
                </DataTrigger>
                <DataTrigger Binding="{Binding AuthStatus}" Value="Active">
                    <Setter Property="Foreground" Value="Green" />
                </DataTrigger>
                <DataTrigger Binding="{Binding AuthStatus}" Value="Blocked">
                    <Setter Property="Foreground" Value="Red" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!--Expander Animation-->
        <Style x:Key="ExpanderAnimation" TargetType="Expander">
            <Style.Triggers>
                <Trigger Property="IsExpanded" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation 
                                    Storyboard.TargetProperty="(Expander.Content).(FrameworkElement.Height)" 
                                    From="0" To="130" Duration="0:0:0.3" />
                                <DoubleAnimation 
                                    Storyboard.TargetProperty="(Expander.Content).(UIElement.Opacity)" 
                                    From="0" To="1" Duration="0:0:0.3" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>

                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation 
                                    Storyboard.TargetProperty="(Expander.Content).(FrameworkElement.Height)" 
                                    From="130" To="0" Duration="0:0:0.3" />
                                <DoubleAnimation 
                                    Storyboard.TargetProperty="(Expander.Content).(UIElement.Opacity)" 
                                    From="1" To="0" Duration="0:0:0.2" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>

    </Application.Resources>
</Application>
